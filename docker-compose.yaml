services:
  # Database service
  db:
    image: postgres:13
    container_name: organ_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-organ_donation}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - organ_network

  # Listing Microservice
  listing-service:
    build: ./listing-service
    container_name: listing_service
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@db:5432/${POSTGRES_DB:-organ_donation}
      NODE_ENV: ${NODE_ENV:-development}
      BIDDING_SERVICE_URL: http://bidding-service:3002
      RESOLUTION_INTERVAL_MINUTES: 5
    ports:
      - "3001:3001"
    networks:
      - organ_network
    volumes:
      - ./listing-service:/app
      - /app/node_modules

  # Bidding Microservice
  bidding-service:
    build: ./bidding-service
    container_name: bidding_service
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@db:5432/${POSTGRES_DB:-organ_donation}
      NODE_ENV: ${NODE_ENV:-development}
      LISTING_SERVICE_URL: http://listing-service:3001
    ports:
      - "3002:3002"
    networks:
      - organ_network
    volumes:
      - ./bidding-service:/app
      - /app/node_modules

  # View Listing Bids Composite Microservice (Python)
  view-listing-bids-service:
    build: ./view-listing-bids-service
    container_name: view_listing_bids_service
    restart: always
    depends_on:
      - listing-service
      - bidding-service
    environment:
      LISTING_SERVICE_URL: http://listing-service:3001
      BIDDING_SERVICE_URL: http://bidding-service:3002
      PORT: 3003
    ports:
      - "3003:3003"
    networks:
      - organ_network
    volumes:
      - ./view-listing-bids-service:/app

networks:
  organ_network:
    driver: bridge

volumes:
  postgres_data: